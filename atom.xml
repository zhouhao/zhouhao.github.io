<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Salty Egg</title>
  
  <subtitle>疯狂de咸蛋</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hzhou.me/"/>
  <updated>2024-03-17T09:03:18.361Z</updated>
  <id>https://hzhou.me/</id>
  
  <author>
    <name>Salty Egg</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>缓存更新策略的列举和比较</title>
    <link href="https://hzhou.me/2024/03/16/%E7%BC%93%E5%AD%98%E6%9B%B4%E6%96%B0%E7%AD%96%E7%95%A5%E7%9A%84%E5%88%97%E4%B8%BE%E5%92%8C%E6%AF%94%E8%BE%83/"/>
    <id>https://hzhou.me/2024/03/16/缓存更新策略的列举和比较/</id>
    <published>2024-03-17T01:03:42.000Z</published>
    <updated>2024-03-17T09:03:18.361Z</updated>
    
    <content type="html"><![CDATA[<p>在现代软件架构中，缓存是提高系统性能和扩展性的关键组件之一。然而，缓存的有效管理，特别是缓存更新策略，对于保持数据一致性和系统可靠性至关重要。</p><p>本文将简单探讨和比较几种常见的缓存更新策略，以及它们各自的优缺点。</p><p>Note: 启发自 <a href="https://book.douban.com/subject/35834352/" target="_blank" rel="noopener">《从程序员到架构师：大数据量 缓存、高并发、微服务 多团队协同等核心场景实战》</a>一书的<code>第四章：读缓存</code>。</p><a id="more"></a><h2 id="更新缓存的挑战"><a href="#更新缓存的挑战" class="headerlink" title="更新缓存的挑战"></a>更新缓存的挑战</h2><p>更新缓存涉及到两个基本步骤：<code>更新数据库</code>和<code>更新缓存</code>。</p><p>尽管这两步听起来简单，但在实际操作中需要考虑多个问题：</p><ol><li>是否先更新数据库还是先更新缓存？</li><li>更新缓存时是先删除还是直接更新？</li><li>如果第一步成功而第二步失败，该如何处理？</li><li>如果两个线程同时更新同一个数据，如何保证数据一致性？</li></ol><p>这些问题的复杂性导致了多种缓存更新组合方案的产生。</p><div class="admonition note"><p class="admonition-title">我们假设一下</p><p>假设，我们采用Redis作为缓存，MySQL作为数据库。</p></div><h2 id="缓存更新策略的比较"><a href="#缓存更新策略的比较" class="headerlink" title="缓存更新策略的比较"></a>缓存更新策略的比较</h2><h3 id="组合1：先更新缓存，再更新数据库"><a href="#组合1：先更新缓存，再更新数据库" class="headerlink" title="组合1：先更新缓存，再更新数据库"></a>组合1：先更新缓存，再更新数据库</h3><pre class="mermaid">graph LR    A[开始] --> B[更新缓存]    B --> C[更新数据库]    C --> D[结束]</pre><p>虽然redis支持事务，但是不支持回滚。因此，这种方案可能导致更新数据库失败后，只能手动回滚redis的操作。</p><p>如果在多线程同时更新的时候，会导致不一致的问题，如果更新过程中加锁，虽然可以保证数据一致性，但会大大降低系统的可用性。</p><p>因此，这种方案成本较高，不推荐使用。</p><h3 id="组合2：先删除缓存，再更新数据库"><a href="#组合2：先删除缓存，再更新数据库" class="headerlink" title="组合2：先删除缓存，再更新数据库"></a>组合2：先删除缓存，再更新数据库</h3><pre class="mermaid">graph LR    A[开始] --> B[删除缓存]    B --> C[更新数据库]    C --> D[结束]</pre><p>这种方案避免了更新失败需要回滚缓存的问题，但可能引入缓存与数据库不一致的情况。</p><pre class="mermaid">gantttitle Race ConditiondateFormat  YYYY-MM-DDsection A删除缓存           :2014-01-01, 1d更新数据库         :2014-01-04, 1d读取数据（来自B的旧值）           :2014-01-05, 1dsection B更新数据库         :2014-01-02, 1d读取数据&建缓存     :2014-01-03, 1d</pre><p>如图，A和B几乎都在同一时间更新数据X，A先删除了缓存，但是B在A完成数据库更新前，就完成了缓存重建的工作，最后A读取X的时候就是缓存的B的旧值。</p><p>按照惯例，依旧可以通过加锁来解决这个问题，但是这样会大大降低系统的可用性。</p><p>这里就涉及了高可用性和一致性取舍的问题。这就需要根据具体业务和需求来讨论了。</p><h3 id="组合3：先更新数据库，再更新缓存"><a href="#组合3：先更新数据库，再更新缓存" class="headerlink" title="组合3：先更新数据库，再更新缓存"></a>组合3：先更新数据库，再更新缓存</h3><pre class="mermaid">graph LR    A[开始] --> B[更新数据库]    B --> C[更新缓存]    C --> D[结束]</pre><p>如果更新数据库成功，而更新缓存失败，本身问题不大，不需回滚，后期在读取的时候，系统会自动尝试建缓存。</p><pre class="mermaid">gantttitle Race ConditiondateFormat  YYYY-MM-DDsection A更新数据库         :2014-01-01, 1d更新缓存           :2014-01-04, 1dsection B更新数据库         :2014-01-02, 1d更新缓存           :2014-01-03, 1d</pre><p>这样又悲剧了，A把缓存又改成了旧值。</p><p>又来了：+🔒，蛋都碎了，为了更新缓存，给数据库读写加锁，有点杀鸡用牛刀了。</p><h3 id="组合4：先更新数据库，再删除缓存"><a href="#组合4：先更新数据库，再删除缓存" class="headerlink" title="组合4：先更新数据库，再删除缓存"></a>组合4：先更新数据库，再删除缓存</h3><pre class="mermaid">graph LR    A[开始] --> B[更新数据库]    B --> C[删除缓存]    C --> D[结束]</pre><p>这种方案解决了组合3中的一些问题，尤其是在处理并发更新时。通过删除缓存来强制后续的读操作去数据库中获取最新值，从而保证了数据的一致性。但是又引入了新的问题：<code>这个时候B读取的时候，读到的是旧值</code>。</p><pre class="mermaid">gantttitle Race ConditiondateFormat  YYYY-MM-DDsection A更新数据库         :2014-01-01, 1d删除缓存           :2014-01-03, 1dsection B读取数据           :2014-01-02, 1d</pre><h3 id="组合5：先删除缓存，更新数据库，再删除缓存"><a href="#组合5：先删除缓存，更新数据库，再删除缓存" class="headerlink" title="组合5：先删除缓存，更新数据库，再删除缓存"></a>组合5：先删除缓存，更新数据库，再删除缓存</h3><pre class="mermaid">graph LR    A[开始] --> B[删除缓存]    B --> C[更新数据库]    C --> D[再次删除缓存]    D --> E[结束]</pre><p>这个方案试图通过在更新操作前后都删除缓存来最小化数据不一致的风险。尽管这种方案并不完美(如下图，<code>C会读到B存放在缓存中的旧数据</code>)，但它在减少脏数据读取的概率方面做得更好。</p><pre class="mermaid">gantttitle Race ConditiondateFormat  YYYY-MM-DDsection A删除缓存           :2014-01-01, 1d更新数据库         :2014-01-03, 1d删除缓存           :2014-01-05, 1dsection B读取数据(会重建缓存)           :2014-01-02, 1dsection C读取数据(B放的旧数据)           :2014-01-04, 1d</pre><h2 id="解决方案的选择"><a href="#解决方案的选择" class="headerlink" title="解决方案的选择"></a>解决方案的选择</h2><p>选择哪种缓存更新策略取决于具体的应用场景和对一致性、可用性以及系统性能的要求。没有一种方案是完美的，每种方案都有可能读取到脏数据，但是通过合理的设计可以最小化这种风险。</p><div class="admonition note"><p class="admonition-title">原文引用书作者的建议</p><p>任何一个方案都不是完美的，但如果剩下1%的问题需要花好几倍的代价去解决，从技术上来讲得不偿失，这就要求架构师去说服业务方，去平衡技术的成本和收益。</p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在现代软件架构中，缓存是提高系统性能和扩展性的关键组件之一。然而，缓存的有效管理，特别是缓存更新策略，对于保持数据一致性和系统可靠性至关重要。&lt;/p&gt;
&lt;p&gt;本文将简单探讨和比较几种常见的缓存更新策略，以及它们各自的优缺点。&lt;/p&gt;
&lt;p&gt;Note: 启发自 &lt;a href=&quot;https://book.douban.com/subject/35834352/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《从程序员到架构师：大数据量 缓存、高并发、微服务 多团队协同等核心场景实战》&lt;/a&gt;一书的&lt;code&gt;第四章：读缓存&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机那些事" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
      <category term="系统设计" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="数据库" scheme="https://hzhou.me/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="缓存" scheme="https://hzhou.me/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>数据库复制策略的优缺点比较</title>
    <link href="https://hzhou.me/2024/03/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E5%88%B6%E7%AD%96%E7%95%A5%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%E6%AF%94%E8%BE%83/"/>
    <id>https://hzhou.me/2024/03/15/数据库复制策略的优缺点比较/</id>
    <published>2024-03-15T07:47:32.000Z</published>
    <updated>2024-03-16T23:59:03.117Z</updated>
    
    <content type="html"><![CDATA[<p>最近做一些知识的整合，简单的罗列一下我理解中的数据库复制策略的优缺点比较，如有遗漏和错误，欢迎评论区留言，多谢！</p><a id="more"></a><table><thead><tr><th>共识机制</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>Leader-based(主从)</td><td>- 写操作的延迟较低，因为所有写操作都由单个领导者节点处理。 <br> - 实现相对简单，因为领导者节点负责协调所有的复制操作。</td><td>- 如果领导者节点失败，整个系统的写能力会受到影响，直到选举出新的领导者。 <br> - 可能成为系统的瓶颈，因为所有的写操作都需要通过领导者节点。</td></tr><tr><td>Consensus-based(基于共识)</td><td>- 提供强一致性保证，即使在部分节点故障的情况下也能保持数据一致性。 <br> - 由于所有节点参与共识过程，因此系统的容错性较高。</td><td>- 写操作的延迟可能较高，因为需要多个节点之间的共识。 <br> - 实现和理解的复杂性较高，因为共识算法通常比较复杂。</td></tr><tr><td>Leaderless( (无领导者)</td><td>- 高可用性，因为所有节点都可以接受读写请求，没有单点故障。 <br> - 可以提供高读写吞吐量，因为请求可以在多个节点之间分散。</td><td>- 只能提供最终一致性，而不是即时的强一致性。 <br> - 同步和冲突解决可能比较复杂，需要仔细设计以确保数据一致性。</td></tr></tbody></table><p>Leader-based的典型服务有Apache ZooKeeper。</p><p>Consensus-Based的典型服务有etcd。</p><p>Leaderless的典型服务有Cassandra。（Cassandra在某些操作，如轻量级事务中，使用Paxos算法来保证操作的原子性和一致性）</p><p>这些复制策略的选择取决于系统的特定需求，例如对一致性、可用性和性能的不同要求。</p><p>在实际应用中，需要根据应用场景和业务需求来选择最合适的复制策略。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近做一些知识的整合，简单的罗列一下我理解中的数据库复制策略的优缺点比较，如有遗漏和错误，欢迎评论区留言，多谢！&lt;/p&gt;
    
    </summary>
    
      <category term="计算机那些事" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
      <category term="系统设计" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="数据库" scheme="https://hzhou.me/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="系统设计" scheme="https://hzhou.me/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Enable postman json tree view</title>
    <link href="https://hzhou.me/2023/07/25/enable-postman-json-tree-view/"/>
    <id>https://hzhou.me/2023/07/25/enable-postman-json-tree-view/</id>
    <published>2023-07-25T18:34:01.000Z</published>
    <updated>2023-10-21T04:38:34.578Z</updated>
    
    <content type="html"><![CDATA[<p>As a qualified backend programmer, we need to deal with JSON data from time to time.</p><p>Currently, many backend programmers use <a href="https://www.postman.com/" target="_blank" rel="noopener">Postman</a> to test API requests. However, Postman as atool itself does not provideparticularly powerful JSON data visualization. For example, it only offers simple code-level data folding and cannotperceive the specific number of elements inside a list.</p><a id="more"></a><p><img src="/img/blog/postman/code-view.jpg" alt="Original Postman Response View"></p><p>To compensate for Postman’s shortcomings, I often use <a href="https://jsoneditoronline.org/" target="_blank" rel="noopener">JSON Editor Online</a> to parse andvisualize JSON data moreeffectively. The Tree View feature allows us to focus on the data of interest by collapsing irrelevant parts. However,it dampens my enthusiasm as it requires manual copying and pasting of data each time.</p><p>But after closely examining Postman, I discovered the existence of a “Visualize” tab. My intuition tells me that thiscould be the solution I need.</p><p><img src="/img/blog/postman/visualize-tab.jpg" alt="Visualize Tab"></p><p>In short, let’s jump straight to the demo: By enabling the JSON tree view plugin, we can achieve the following effect.</p><p><img src="/img/blog/postman/tree-view.jpg" alt="Tree View"></p><h3 id="How-to-set-up"><a href="#How-to-set-up" class="headerlink" title="How to set up"></a>How to set up</h3><ol><li>Select the “Collections” you want to enable this feature from the left side bar (for example: I picked “Local Test”here)</li><li>Select “Test” Tab, and past the <a href="https://github.com/zhouhao/zhouhao/blob/main/code/postman-tree-view.js" target="_blank" rel="noopener">code</a> intothe text area.</li><li>Then all requests in that collection will be enabled with tree view from visualize tab.</li><li>Note: You can also enable this code for a single request only rather than a collection by pasting the code into the request’s “tests” tab.</li></ol><p><img src="/img/blog/postman/setup.jpg" alt="Setup"></p><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>Thanks to the opne source project: <a href="https://github.com/josdejong/jsoneditor" target="_blank" rel="noopener">josdejong/jsoneditor</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;As a qualified backend programmer, we need to deal with JSON data from time to time.&lt;/p&gt;
&lt;p&gt;Currently, many backend programmers use &lt;a href=&quot;https://www.postman.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Postman&lt;/a&gt; to test API requests. However, Postman as a
tool itself does not provide
particularly powerful JSON data visualization. For example, it only offers simple code-level data folding and cannot
perceive the specific number of elements inside a list.&lt;/p&gt;
    
    </summary>
    
      <category term="计算机那些事" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
      <category term="Backend" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/Backend/"/>
    
    
      <category term="JSON" scheme="https://hzhou.me/tags/JSON/"/>
    
      <category term="Postman" scheme="https://hzhou.me/tags/Postman/"/>
    
  </entry>
  
  <entry>
    <title>When git force pushed before a pull</title>
    <link href="https://hzhou.me/2023/07/14/When-git-force-pushed-before-a-pull/"/>
    <id>https://hzhou.me/2023/07/14/When-git-force-pushed-before-a-pull/</id>
    <published>2023-07-14T23:13:35.000Z</published>
    <updated>2024-03-15T07:46:53.987Z</updated>
    
    <content type="html"><![CDATA[<p>Git, a widely used version control system, empowers developers to collaborate seamlessly and manage code repositoriesefficiently. However, even with its robust features and safeguards, human mistakes can still occur, leading to potentialcode conflicts and loss of work. One such common pitfall is force-pushing changes before performing a pull operation.And I just made it happen today.</p><a id="more"></a><p>The story is that I have a feature branch, and I keep merging new sub-feature PRs into that main feature branch.</p><p>As a milestone, I would like to rebase the main feature branch after a while. So I type the code without any hesitation.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin &amp;&amp; git rebase origin/main</span><br><span class="line">git push origin feature/my-awesome-feature -f</span><br></pre></td></tr></table></figure><p>I did not realize anything bad, until I open a new PR to merge a new module to the feature branch, and I can see:<img src="/img/blog/pr-diff-view.png" alt="WTF: Why so many files get changed"></p><p>OK, I am fine! 😭 (Not a big deal with a force push without a pull?!)<img src="/img/blog/i-am-fine.jpg" alt="I am fine"></p><p>After few seconds with trying <code>ctrl + z</code>, and nothing happens. I know it is time to take some real actions.</p><h4 id="Case-1-before-the-force-push-we-already-have-the-PR-opened-for-feature-my-awesome-feature"><a href="#Case-1-before-the-force-push-we-already-have-the-PR-opened-for-feature-my-awesome-feature" class="headerlink" title="Case 1: before the force push, we already have the PR opened for feature/my-awesome-feature"></a>Case 1: before the force push, we already have the PR opened for <code>feature/my-awesome-feature</code></h4><p>We can see this log info from the pr page, and we will know: before the force push, the head is @ <code>1234567</code>. And we needthis number.<img src="/img/blog/force-push-log.png" alt="Force Push Log"></p><h4 id="Case-2-no-PR-page-but-you-rebased-other-branch-locally-just-before-force-push"><a href="#Case-2-no-PR-page-but-you-rebased-other-branch-locally-just-before-force-push" class="headerlink" title="Case 2: no PR page, but you rebased other branch locally just before force push"></a>Case 2: no PR page, but you rebased other branch locally just before force push</h4><p>If you run <code>git fetch origin &amp;&amp; git rebase origin/main</code>, you may see the similar log below. And you can see the latesthead of <code>feature/my-awesome-feature</code> is <code>1234567</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">From github.com:XYZ&#x2F;ABC</span><br><span class="line">1234567..2312a5a  feature&#x2F;my-awesome-feature -&gt; origin&#x2F;feature&#x2F;my-awesome-feature</span><br><span class="line">Successfully rebased and updated refs&#x2F;heads&#x2F;feature&#x2F;my-awesome-feature-sub-X.</span><br></pre></td></tr></table></figure><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>With the commit hash we get before the force push. We can restore branch <code>feature/my-awesome-feature</code> as</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard 1234567</span><br><span class="line">$ git push --force</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git, a widely used version control system, empowers developers to collaborate seamlessly and manage code repositories
efficiently. However, even with its robust features and safeguards, human mistakes can still occur, leading to potential
code conflicts and loss of work. One such common pitfall is force-pushing changes before performing a pull operation.
And I just made it happen today.&lt;/p&gt;
    
    </summary>
    
      <category term="计算机那些事" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
      <category term="操蛋" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/%E6%93%8D%E8%9B%8B/"/>
    
    
      <category term="git" scheme="https://hzhou.me/tags/git/"/>
    
      <category term="push" scheme="https://hzhou.me/tags/push/"/>
    
      <category term="recover" scheme="https://hzhou.me/tags/recover/"/>
    
  </entry>
  
  <entry>
    <title>Migrate to MongoDB from MariaDB for SaltyNote Service</title>
    <link href="https://hzhou.me/2023/05/01/Migrate-to-Mongo-from-Mariadb-for-SaltyNote-Service/"/>
    <id>https://hzhou.me/2023/05/01/Migrate-to-Mongo-from-Mariadb-for-SaltyNote-Service/</id>
    <published>2023-05-01T18:19:33.000Z</published>
    <updated>2024-03-15T07:46:53.987Z</updated>
    
    <content type="html"><![CDATA[<p>As a software engineer, I think everyone can tell thousands of words about the differences between SQL vs NoSQL. And howto make a choice between them with your requirement.</p><p>Recently, I migrated the SaltyNote service from MariaDB to MongoDB. While the reason is not for high throughput orperformance.</p><a id="more"></a><p>Be host, the important reason I changed to Mongo is that I need a more flexible schema for the note data.</p><p>If I stick to MariaDB, I need to have a separate table for note tags field for better aggregation and search later.</p><div class="admonition note"><p class="admonition-title">Info</p><p>I know some SQL database support JSON field, that can also be the solution. While instead of using JSON field, I prefer NoSQL.</p></div><h2 id="For-MariaDB"><a href="#For-MariaDB" class="headerlink" title="For MariaDB"></a>For MariaDB</h2><h3 id="Without-JSON-field"><a href="#Without-JSON-field" class="headerlink" title="Without JSON field"></a>Without JSON field</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> note (</span><br><span class="line">    <span class="keyword">id</span>           <span class="built_in">int</span> auto_increment                  <span class="keyword">not</span> <span class="literal">null</span> primary <span class="keyword">key</span>,</span><br><span class="line">    user_id      <span class="built_in">varchar</span>(<span class="number">40</span>)                         <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="built_in">text</span>         <span class="built_in">varchar</span>(<span class="number">512</span>)                        <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    <span class="keyword">url</span>          <span class="built_in">varchar</span>(<span class="number">512</span>)                        <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    note         <span class="built_in">text</span>,</span><br><span class="line">    is_page_only <span class="built_in">bit</span>       <span class="keyword">default</span> b<span class="string">'0'</span>              <span class="literal">null</span>,</span><br><span class="line">    created_time <span class="built_in">timestamp</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tag (</span><br><span class="line">    <span class="keyword">id</span>      <span class="built_in">int</span> auto_increment <span class="keyword">not</span> <span class="literal">null</span> primary <span class="keyword">key</span>,</span><br><span class="line">    tag     <span class="built_in">varchar</span>(<span class="number">128</span>) <span class="literal">null</span>,</span><br><span class="line">    note_id <span class="built_in">int</span>          <span class="literal">null</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>Without JSON field, I need to create a separate table for note tags field, so I can query note by tags easily.For example, to query all notes with tag <code>java</code>, I can use the following SQL:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using * here is not a good practice, just for demo</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> note <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> note_id <span class="keyword">from</span> tag <span class="keyword">where</span> tag = <span class="string">'java'</span>);</span><br></pre></td></tr></table></figure><p>While this solution will bring some trouble when update tags, for example, if I have a note with tags <code>java</code>and <code>spring</code>.Later, I need to update the tags to <code>java</code> and <code>spring-boot</code>. I need to delete the old tags and insert the new tags. Thefull <strong>update</strong> will include multiple actions.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> * <span class="keyword">from</span> tag <span class="keyword">where</span> note_id = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tag (tag, note_id) <span class="keyword">values</span> (<span class="string">'java'</span>, <span class="number">1</span>), (<span class="string">'spring-boot'</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># or more complex, if we only delete non-used tags, e.g. no delete  `java` here.</span></span><br><span class="line"><span class="comment"># There we need to query all tags for note 1, and delete the tags not in the new tags list.</span></span><br></pre></td></tr></table></figure><h3 id="With-JSON-field"><a href="#With-JSON-field" class="headerlink" title="With JSON field"></a>With JSON field</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> note (</span><br><span class="line">    <span class="keyword">id</span>           <span class="built_in">int</span> auto_increment                  <span class="keyword">not</span> <span class="literal">null</span> primary <span class="keyword">key</span>,</span><br><span class="line">    user_id      <span class="built_in">varchar</span>(<span class="number">40</span>)                         <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="built_in">text</span>         <span class="built_in">varchar</span>(<span class="number">512</span>)                        <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    <span class="keyword">url</span>          <span class="built_in">varchar</span>(<span class="number">512</span>)                        <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    note         <span class="built_in">text</span>,</span><br><span class="line">    <span class="comment"># tags field here</span></span><br><span class="line">    tags         <span class="keyword">JSON</span>,   </span><br><span class="line">    is_page_only <span class="built_in">bit</span>       <span class="keyword">default</span> b<span class="string">'0'</span>              <span class="literal">null</span>,</span><br><span class="line">    created_time <span class="built_in">timestamp</span> <span class="keyword">default</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>With JSON field, we can store the tags in the same table. And the update will be much easier, since we do not need toscan multiple rows.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># query all notes with tag `java`</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> note <span class="keyword">WHERE</span> JSON_CONTAINS(tags, <span class="string">'java'</span>, <span class="string">'$'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># update tags for note 1</span></span><br><span class="line"><span class="keyword">update</span> note <span class="keyword">set</span> tags = JSON_ARRAY(<span class="string">'Java'</span>, <span class="string">'Spring'</span>) <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>On my research, I find Spring-Data-JPA does not support JSON field well. So I need to use native SQL to query andupdate, or introduce new dependency: <a href="https://prateek-ashtikar512.medium.com/how-to-handle-json-in-mysql-4adaeeb1d42f" target="_blank" rel="noopener"><em>HibernateTypes</em></a>.</p><h2 id="For-MongoDB"><a href="#For-MongoDB" class="headerlink" title="For MongoDB"></a>For MongoDB</h2><p>For the reason above, eventually, I choose MongoDB. With MongoDB, I can store the tags in the same document with thenote object.</p><div class="admonition note"><p class="admonition-title">Info</p><p>Transaction is not a concern for SaltyNote. Since it is OK to save duplicated notes, and user can simply delete it. (No duplicated notes have been found so far)</p></div><h3 id="Pros"><a href="#Pros" class="headerlink" title="Pros:"></a>Pros:</h3><ol><li>Flexible schema, so no need to do db migration when the schema changes.</li><li>Great Spring boot integration, with Spring Data MongoDB, we can use the same repository interface as Spring Data JPA.</li><li>Auto generated ID field works pretty well.</li><li>All benefits of NoSQL.</li></ol><h3 id="Cons"><a href="#Cons" class="headerlink" title="Cons:"></a>Cons:</h3><ol><li>Less knowledge than RDB, so it may take more time to set it up, and maintain it.</li></ol><h2 id="The-Tag-UI-in-Chrome-Extension"><a href="#The-Tag-UI-in-Chrome-Extension" class="headerlink" title="The Tag UI in Chrome Extension"></a>The Tag UI in Chrome Extension</h2><p>The tag feature will be available in the next releaseof <a href="https://chrome.google.com/webstore/detail/saltynote/baanghljiehhpljdbonfknboakpfajnn" target="_blank" rel="noopener">SaltyNote Chrome Extension</a>v0.4.0.</p><p><img src="/img/saltynote/tag-ui.png" alt="Tag UI"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;As a software engineer, I think everyone can tell thousands of words about the differences between SQL vs NoSQL. And how
to make a choice between them with your requirement.&lt;/p&gt;
&lt;p&gt;Recently, I migrated the SaltyNote service from MariaDB to MongoDB. While the reason is not for high throughput or
performance.&lt;/p&gt;
    
    </summary>
    
      <category term="计算机那些事" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
      <category term="microservice" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/microservice/"/>
    
      <category term="database" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/microservice/database/"/>
    
    
      <category term="Java" scheme="https://hzhou.me/tags/Java/"/>
    
      <category term="microservice" scheme="https://hzhou.me/tags/microservice/"/>
    
      <category term="SpringBoot" scheme="https://hzhou.me/tags/SpringBoot/"/>
    
      <category term="Redis" scheme="https://hzhou.me/tags/Redis/"/>
    
      <category term="MariaDB" scheme="https://hzhou.me/tags/MariaDB/"/>
    
      <category term="MongoDB" scheme="https://hzhou.me/tags/MongoDB/"/>
    
      <category term="SaltyNote" scheme="https://hzhou.me/tags/SaltyNote/"/>
    
  </entry>
  
  <entry>
    <title>SaltyNote Implementation - Chrome Extension</title>
    <link href="https://hzhou.me/2023/04/22/SaltyNote-Implementation-Chrome-Extension/"/>
    <id>https://hzhou.me/2023/04/22/SaltyNote-Implementation-Chrome-Extension/</id>
    <published>2023-04-23T04:39:25.000Z</published>
    <updated>2023-10-21T04:38:34.577Z</updated>
    
    <content type="html"><![CDATA[<p>In <a href="https://hzhou.me/2023/04/22/saltynote-implementation-service/">SaltyNote Implementation - Service</a>, I shared thedetails about server side implementation of SaltyNote. In this article, I will introduce the implementation of theSaltyNote Chrome Extension.</p><a id="more"></a><div class="box box-tip">  Since Chrome Extension is a special Web Application running in Chrome, in this article, I will focus more on the differences between Chrome Extension and standard Web Application.</div><p>Reference: <a href="https://saltynote.github.io/saltynote-chrome-extension/" target="_blank" rel="noopener">https://saltynote.github.io/saltynote-chrome-extension/</a></p><p>Unlike standard website, Chrome Extension can have 2 different runtime environments: <strong>background script</strong> and <strong>contentscript</strong>.</p><ul><li><strong>background.js</strong>: The background script is a persistent script that runs in the background of Chrome Extension. It isused to handle the events from the browser, and it can communicate with the content script. For example, thebackground script can listen to the browser action click event, and send a message to the content script to open thesidebar. For more details, please refer to<a href="https://developer.chrome.com/docs/extensions/mv3/service_workers/" target="_blank" rel="noopener">Manage events with service workers</a></li><li><strong>Content Script</strong>: The content script is a script that runs in the context of the web page. It can read details ofthe web pages the browser visits, make changes to them, and pass information to their parent extension. For moredetails, please referto <a href="https://developer.chrome.com/docs/extensions/mv3/content_scripts/" target="_blank" rel="noopener">Content scripts</a></li></ul><p><img src="/img/saltynote/chrome-runtime-envs.png" alt="Chrome Extension Runtime Environment"></p><h2 id="Workflow"><a href="#Workflow" class="headerlink" title="Workflow"></a>Workflow</h2><p><img src="/img/saltynote/chrome-extension-workflow.png" alt="Chrome Extension Workflow"></p><ol><li>The Content Script will create a new div in the web page, and mount a Vue application to thatdiv. <a href="https://github.com/SaltyNote/saltynote-chrome-extension/blob/master/src/overlay/overlay.js#L12-L19" target="_blank" rel="noopener">Source Code</a>Then within that Vue application, it will render the component of Annotation Card, Sidebar, etc. All availablecomponents arelisted <a href="https://github.com/SaltyNote/saltynote-chrome-extension/tree/master/src/overlay/components" target="_blank" rel="noopener">here</a>.</li><li>Due to <code>Same-Origin Policy</code>, the content script cannot send http requests to the SaltyNote Server directly. So thecontent script will send a message to the background script, and the background script will forward the http requestto the SaltyNote Server. Once the response is received, the background script will send the response back to thecontentscript. <img src="/img/saltynote/chrome-extension-origin.jpg" alt="Chrome Extension has a different Origin, whose requests will not be blocked by `SOP`"></li><li>As I mentioned in Service Implementation, the auth model is implemented with access token and refresh token. And theaccess token will expire in a short time. So instead of asking user to login again or manually refresh the accesstoken with refresh token, before sending out the data request, the Chrome extension will check whether the accesstoken is expired or not, it is expired, it will send a request to refresh the access token automatically. Since wehave a long-lived refresh token, the user only needs to login once before refresh token expires or is invalidated.</li></ol><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><p>When injecting the content script, a css file will also be pushed to host page. If we do not take if carefully, theinjected css may impact the UI of the host page. For resolve this, Iuse <a href="https://www.npmjs.com/package/sass-plus" target="_blank" rel="noopener"><code>sass-plus</code></a>(<a href="https://github.com/SaltyNote/saltynote-chrome-extension/blob/70892bb4e20934e2870c7f9eca8e09391921aea3/package.json#L10" target="_blank" rel="noopener">Source Code</a>)to generate a customized css filewith bootstrap within a custom classname <code>saltynote</code>(<a href="https://github.com/SaltyNote/saltynote-chrome-extension/blob/70892bb4e20934e2870c7f9eca8e09391921aea3/src/custom.scss#L7" target="_blank" rel="noopener">source code</a>).Then I will add the class name to the root element of the Vueapplication. So the css will only impact the elements within the Vue application.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In &lt;a href=&quot;https://hzhou.me/2023/04/22/saltynote-implementation-service/&quot;&gt;SaltyNote Implementation - Service&lt;/a&gt;, I shared the
details about server side implementation of SaltyNote. In this article, I will introduce the implementation of the
SaltyNote Chrome Extension.&lt;/p&gt;
    
    </summary>
    
      <category term="计算机那些事" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
      <category term="Chrome Extension" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/Chrome-Extension/"/>
    
      <category term="microservice" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/Chrome-Extension/microservice/"/>
    
    
      <category term="Java" scheme="https://hzhou.me/tags/Java/"/>
    
      <category term="microservice" scheme="https://hzhou.me/tags/microservice/"/>
    
      <category term="SpringBoot" scheme="https://hzhou.me/tags/SpringBoot/"/>
    
      <category term="Redis" scheme="https://hzhou.me/tags/Redis/"/>
    
      <category term="MariaDB" scheme="https://hzhou.me/tags/MariaDB/"/>
    
      <category term="SaltyNote" scheme="https://hzhou.me/tags/SaltyNote/"/>
    
  </entry>
  
  <entry>
    <title>SaltyNote Implementation - Service</title>
    <link href="https://hzhou.me/2023/04/22/SaltyNote-Implementation-Service/"/>
    <id>https://hzhou.me/2023/04/22/SaltyNote-Implementation-Service/</id>
    <published>2023-04-22T22:02:51.000Z</published>
    <updated>2024-03-21T03:20:35.020Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://saltynote.com/" target="_blank" rel="noopener">SaltyNote</a> is a Chrome Extension that provides the immersive page notes taken experience.The users can view all the notes taken on the current page from the right sidebar without leaving the page.</p><p>In this article, I will introduce the implementation of the SaltyNote service.</p><a id="more"></a><p>The Code base: <a href="https://github.com/SaltyNote/saltynote-service" target="_blank" rel="noopener">https://github.com/SaltyNote/saltynote-service</a></p><h3 id="High-Level-Overview-of-the-Service"><a href="#High-Level-Overview-of-the-Service" class="headerlink" title="High Level Overview of the Service"></a>High Level Overview of the Service</h3><p><img src="/img/saltynote/SaltyNote-Service.png" alt="SaltyNote Overview"></p><h2 id="Implementation-details"><a href="#Implementation-details" class="headerlink" title="Implementation details"></a>Implementation details</h2><ol><li>The service is implemented in Java 17 with SpringBoot V3 framework. (In case I need to migrate it to GraalVM NativeImage in the future)</li><li>The Auth flow is implemented with Spring Security and JWT, and the whole service is stateless and no cookie orsession are used, which means it can be horizontally scaled easily. For now, I only have one instance of the service,since I do not have much traffic yet.</li><li>The Auth model is based on <strong>access token</strong> and <strong>refresh token</strong>. The access token is short-lived(an hour or asingle day, depending on your security level), and the refreshtoken is long-lived(month to year, maybe). You can usethese <a href="https://github.com/SaltyNote/saltynote-service/blob/6038ca5c3ad41ec621c454c979c0aadbafbab832/src/main/resources/application.properties#L30-L35" target="_blank" rel="noopener">configurations</a>to set the TTL(The config here is for dev purpose, so I set them small). The access token is needed to access theprotected resources(e.g. user’s profile and their notes), and the refresh token is used to refresh the accesstoken when access token expired.</li><li>The service provides 3 controllers for RESTful APIs:<ul><li><strong>Public Controller</strong>: The APIs in this controller are public, which means no authentication is needed. For now,itonly provides the welcome API for health check.</li><li><strong>User Controller</strong>: The APIs in this controller are used operations. For example, the user can register, login(request for access token and refresh token),change password, delete account, etc.</li><li><strong>Note Controller</strong>: The APIs in this controller are used to manage the user’s notes. For example, the user cancreate, update, delete, and get their notes(for a given url or all of them).</li></ul></li></ol><h4 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h4><ol><li><strong>Access token</strong> is not persisted in the database nor in the Redis cache. In this case, user cannot revoke the accesstoken. So if it is leaked, the attacker can access the data onbehalf on the access token owner until it is expired. This is why we should have it short-lived. (<em>JWT contains useridentity information inthe JWT token payload. So once the server validates the access token(Not expired, and the signature is correct), itwill allow the request.</em>)</li><li>Since user may log in frequently from different devices, instead to create a new refresh token anytime when userlogin, the service will re-use the refresh token if it still has 80% of its TTL.</li><li><strong>Refresh token</strong> are stored in database, so if user feel their refresh token is leaked, they can delete it from thedatabase, and the attacker cannot use it anymore.</li><li>For easily user information validation, JWT is also used for refresh token in this service, but it is not required.While JWT token can store used information in the payload, it could save me a lot of code for MVP. And I am not awareof any security issue for this. If you know any, please let me know.</li><li>To protect the service from batch user registration attack, a verification code is needed during signup flow, and thecode will be sent to the user via email asynchronously by Application Event, with which they want to register. (Theverification code can be stored in rediswith TTL.) </li></ol><pre class="mermaid">sequenceDiagram New User->>Service: Signup with this {EMAIL}Service-->>Email Client: Send Verification Code to {EMAIL}Service->>New User: Hi, Verification Code has been sent to {EMAIL}Email Client-->>New User: Read Verification CodeNew User->>Service: Signup with this {EMAIL}, {USERNAME}, {PASSWORD} and {VERIFICATION CODE}Service->>New User: Your Profile has been created!</pre><ol start="6"><li>For Redis cache, if the cache object’s schema has been changed, the de/serialization may fail. As a workaround, whenthe service is deployed, it will clean all cache before serving the traffic. (I know it is not a good solution, butsince I am still actively developing the service, it benefits more. Once the service is stable, and the schema isfinalized, the cache cleaning can be removed.)</li></ol><h2 id="The-Infrastructure"><a href="#The-Infrastructure" class="headerlink" title="The Infrastructure"></a>The Infrastructure</h2><ol><li>The service is deployed on a VPS with enough CPU cores and memory when traffic is low. And it is managed bysystemd.</li><li><a href="https://github.com/SaltyNote/saltynote-service/tree/master/.github/workflows" target="_blank" rel="noopener">GitHub Action</a> is used for CI/CD. Theservice is built and tested on every push to the main branch. And it will bedeployed to the VPS manually for now. (It can be switched to automatically deploy if the build and test are passed.)</li><li>For load balancing, I use Nginx as the reverse proxy. And it is also configured to serve asthe <a href="https://github.com/SaltyNote/saltynote-service/blob/master/script/nginx-rate-limit.conf" target="_blank" rel="noopener">rate limiter</a>.</li><li>For Data Storage, the Mariadb(relational database) is used. Since the data model is simple for now, there are only 4maintables: <code>User</code>, <code>Note</code>, <code>Vault</code>, <code>Login History</code>. While, I may migrate it to NoSQL as mongodb in the future.</li><li>For performance concern, the Redis is used as the cache layer. The cache is used to cache the user profile, user’snotes and vaults.</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://saltynote.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SaltyNote&lt;/a&gt; is a Chrome Extension that provides the immersive page notes taken experience.
The users can view all the notes taken on the current page from the right sidebar without leaving the page.&lt;/p&gt;
&lt;p&gt;In this article, I will introduce the implementation of the SaltyNote service.&lt;/p&gt;
    
    </summary>
    
      <category term="计算机那些事" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
      <category term="Chrome Extension" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/Chrome-Extension/"/>
    
      <category term="microservice" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/Chrome-Extension/microservice/"/>
    
    
      <category term="Java" scheme="https://hzhou.me/tags/Java/"/>
    
      <category term="microservice" scheme="https://hzhou.me/tags/microservice/"/>
    
      <category term="SpringBoot" scheme="https://hzhou.me/tags/SpringBoot/"/>
    
      <category term="Redis" scheme="https://hzhou.me/tags/Redis/"/>
    
      <category term="MariaDB" scheme="https://hzhou.me/tags/MariaDB/"/>
    
      <category term="SaltyNote" scheme="https://hzhou.me/tags/SaltyNote/"/>
    
  </entry>
  
  <entry>
    <title>Maybe not a good start of 2023</title>
    <link href="https://hzhou.me/2023/04/12/maybe-not-a-good-start-of-2023/"/>
    <id>https://hzhou.me/2023/04/12/maybe-not-a-good-start-of-2023/</id>
    <published>2023-04-12T22:32:26.000Z</published>
    <updated>2023-10-21T04:38:34.579Z</updated>
    
    <content type="html"><![CDATA[<p>From the end of 2022, I have heard so many layoff news from big tech. While I never thought I would be impacted, since Ibelieved Salesforce is a 2B company, and its business would be as stable as before.Embarrassing, it came to this news eventually, just one day before my son’sbirthday. &gt;&gt; <a href="https://www.nytimes.com/2023/01/04/technology/salesforce-layoffs.html" target="_blank" rel="noopener">salesforce 10% layoff</a></p><a id="more"></a><p>When I was laid off, I did not take it very serious, since I was still in paternity leave, and I spent some a lot oftime with my kid, and spare some time for interview preparing.I was pretty confident that I would find my new job if I want to even I will be paid less.</p><p>But later, I find it is not that easy.I have been interviewed by some companies, and I have been rejected by all of them eventually. I do not think I did abad job, maybe there are better candidates than me, or maybe I am not a good fit for the company.</p><p>For example, a startup uses Golang for backend, and I told the recruiter that I have very little experience with it. Ieven spent a full day for learning Golang, so that I can use golang for interview. I did not do any wrong, and I ampretty happy with my performance. But I was rejected anyway.</p><p>Even for a senior software engineer as me, it is not easy to find a new job. I can feel it will be super hard year fornew graduates.</p><p>Best of luck for all of us!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;From the end of 2022, I have heard so many layoff news from big tech. While I never thought I would be impacted, since I
believed Salesforce is a 2B company, and its business would be as stable as before.
Embarrassing, it came to this news eventually, just one day before my son’s
birthday. &amp;gt;&amp;gt; &lt;a href=&quot;https://www.nytimes.com/2023/01/04/technology/salesforce-layoffs.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;salesforce 10% layoff&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="程序员的日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    
      <category term="操蛋" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/%E6%93%8D%E8%9B%8B/"/>
    
    
      <category term="layoff" scheme="https://hzhou.me/tags/layoff/"/>
    
      <category term="interview" scheme="https://hzhou.me/tags/interview/"/>
    
  </entry>
  
  <entry>
    <title>SaltyNote Server Setup</title>
    <link href="https://hzhou.me/2020/12/24/SaltyNote-Server-Setup/"/>
    <id>https://hzhou.me/2020/12/24/SaltyNote-Server-Setup/</id>
    <published>2020-12-24T08:26:41.000Z</published>
    <updated>2023-10-21T04:38:34.577Z</updated>
    
    <content type="html"><![CDATA[<p>Last post <a href="https://hzhou.me/2020/12/23/ubuntu-server-setup/">Ubuntu Server Setup</a>, I talked about the basic setup for an Ubuntu server. In this post, I will share some details about the setup forsaltynote server.</p><a id="more"></a><h2 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h2><h3 id="1-Create-a-new-database-and-a-database-user"><a href="#1-Create-a-new-database-and-a-database-user" class="headerlink" title="1. Create a new database, and a database user"></a>1. Create a new database, and a database user</h3><p>Login database from terminal with <code>mysql -u root -p</code>, and execute follow command lines:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> saltynote;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Please update USER_NAME and A-STRONG-PASSWORD.</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'USER_NAME'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'A_STRONG_PASSWORD'</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> saltynote.* <span class="keyword">TO</span> <span class="string">'USER_NAME'</span>@<span class="string">'localhost'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</span><br></pre></td></tr></table></figure><p>Note: You can find more details about how to enable remote access from <a href="https://hzhou.me/2014/04/21/mysql-enable-remote-access-and-create-a-new-user/">this post</a>. While here, I only enable it with local access, as I for security reason, it is not required for current stage.</p><h2 id="Spring-Boot-Service"><a href="#Spring-Boot-Service" class="headerlink" title="Spring Boot Service"></a>Spring Boot Service</h2><p>The <a href="https://github.com/SaltyNote/saltynote-service" target="_blank" rel="noopener">service</a> is implemented with Spring Boot. So it can be run with a standalone jar file as a <a href="https://www.freedesktop.org/wiki/Software/systemd/" target="_blank" rel="noopener">Systemd</a> service.You can find more official information from <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/deployment.html#deployment-systemd-service" target="_blank" rel="noopener">this link</a>.</p><h3 id="Create-a-new-user"><a href="#Create-a-new-user" class="headerlink" title="Create a new user"></a>Create a new user</h3><p>For security, I will create a specific user to run the service. <a href="https://www.baeldung.com/spring-boot-app-as-a-service" target="_blank" rel="noopener">This post</a> will be very helpful for this step.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a new user, and create its home dir</span></span><br><span class="line">sudo useradd -m saltynote</span><br><span class="line"><span class="comment"># Update its password, so the new user can log in later </span></span><br><span class="line">sudo passwd saltynote</span><br></pre></td></tr></table></figure><h3 id="Create-Service-Folder-amp-Service-Setup"><a href="#Create-Service-Folder-amp-Service-Setup" class="headerlink" title="Create Service Folder &amp; Service Setup"></a>Create Service Folder &amp; Service Setup</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /home/saltynote/service</span><br></pre></td></tr></table></figure><p>Upload the jar file to <code>/home/saltynote/service</code> folder, and create <code>application.properties</code> inside that folder, which can be used to set some sensitive information. e.g. database connection info.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Make saltynote is the owner of service.jar</span></span><br><span class="line">chown saltynote:saltynote service.jar</span><br><span class="line"><span class="comment"># Only give owner read and execute permission</span></span><br><span class="line">chmod 500 service.jar</span><br></pre></td></tr></table></figure><h4 id="Systemd-Setup"><a href="#Systemd-Setup" class="headerlink" title="Systemd Setup"></a>Systemd Setup</h4><p>Create <code>note.service</code> in <code>/etc/systemd/system</code> dir, and populate <code>note.service</code> as below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;SaltyNote Service</span><br><span class="line">After&#x3D;syslog.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User&#x3D;saltynote</span><br><span class="line">ExecStart&#x3D;&#x2F;home&#x2F;saltynote&#x2F;service&#x2F;service.jar</span><br><span class="line">SuccessExitStatus&#x3D;143</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure><p>We can enable this service to auto start when system restarts by:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> note.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># manually start it</span></span><br><span class="line">systemctl start note.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># check its status</span></span><br><span class="line">systemctl status note.service</span><br></pre></td></tr></table></figure><p>If everything goes well, the service should start now.Open <a href="http://YOUR-SERVER-IP:8888" target="_blank" rel="noopener">http://YOUR-SERVER-IP:8888</a>, you should see a welcome message in JSON format.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># You can check that the service is running with saltynote user.</span></span><br><span class="line">ps aux | grep java | grep -v grep</span><br></pre></td></tr></table></figure><h3 id="NginX-and-HTTPS"><a href="#NginX-and-HTTPS" class="headerlink" title="NginX and HTTPS"></a>NginX and HTTPS</h3><p>Now, we can connect NginX with our service, which means we want <code>http://dev.saltynote.com</code> displays the same contentas <code>http://dev.saltynote.com:8888</code> instead of showing NginX welcome page.</p><h4 id="1-Add-Upstream"><a href="#1-Add-Upstream" class="headerlink" title="1. Add Upstream"></a>1. Add Upstream</h4><p>Open <code>/etc/nginx/nginx.conf</code>, and add a new <code>upstream</code> inside <code>http</code> section. (I named it as <code>service</code>, while it can beany name you want.)</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">## Other configurations</span></span><br><span class="line">    </span><br><span class="line">    <span class="attribute">upstream</span> service &#123;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:8888</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">## Other configurations</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-Connect-it-in-Site-Conf"><a href="#2-Connect-it-in-Site-Conf" class="headerlink" title="2. Connect it in Site Conf"></a>2. Connect it in Site Conf</h4><p>Open <code>/etc/nginx/sites-available/default</code>, and update the <code>server_name</code> and <code>location</code> sections.</p><p><strong>Note</strong>: You must own the domain before you can add them to <code>server_name</code>.</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># You can enable multiple domains below</span></span><br><span class="line">    <span class="attribute">server_name</span> dev.saltynote.com;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://service;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-Reload-or-restart-NginX"><a href="#3-Reload-or-restart-NginX" class="headerlink" title="3. Reload or restart NginX"></a>3. Reload or restart NginX</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure><p><img src="/img/blog/nginx-service.png" alt="nginx-service"></p><h4 id="4-Enable-Https"><a href="#4-Enable-Https" class="headerlink" title="4. Enable Https"></a>4. Enable Https</h4><p>So far, everything seems working now, while the browser still complains <code>Not Secure</code> in the url bar. It is time toenable https for our service. It is free with <a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a>.</p><h5 id="4-1-Install-Certbot"><a href="#4-1-Install-Certbot" class="headerlink" title="4.1 Install Certbot"></a>4.1 Install <a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot</a></h5><p>It should be easy to install certbot by followingthe <a href="https://certbot.eff.org/lets-encrypt/ubuntufocal-nginx" target="_blank" rel="noopener">instruction</a>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Since I use nginx, I will run this to enable https</span></span><br><span class="line">sudo certbot --nginx</span><br></pre></td></tr></table></figure><p><img src="/img/blog/nginx-https.png" alt="nginx-https"></p><h4 id="5-Hide-service-from-port-8888"><a href="#5-Hide-service-from-port-8888" class="headerlink" title="5. Hide service from port 8888"></a>5. Hide service from port 8888</h4><p>We enable NginX with https for our service now, and we can hide the original service running in port <code>8888</code> from thepublic. There are multiple solutions for this. e.g. <a href="https://www.cyberciti.biz/faq/iptables-block-port/" target="_blank" rel="noopener"><code>iptables</code></a>.</p><p>While I find <a href="https://help.ubuntu.com/community/UFW" target="_blank" rel="noopener"><code>UFW - Uncomplicated Firewall</code></a> is more user-friendly, so I willchoose it here.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ufw status</span><br><span class="line"><span class="comment"># It is inactive by default</span></span><br><span class="line">Status: inactive</span><br><span class="line">➜  ~ ufw <span class="built_in">enable</span></span><br><span class="line"><span class="comment"># It is OK ot enable it, it will not disrupt your current SSH connection</span></span><br><span class="line">Command may disrupt existing ssh connections. Proceed with operation (y|n)? y</span><br><span class="line">Firewall is active and enabled on system startup</span><br><span class="line">➜  ~ ufw allow 22   <span class="comment"># For SSH</span></span><br><span class="line">Rule added</span><br><span class="line">Rule added (v6)</span><br><span class="line">➜  ~ ufw allow 80   <span class="comment"># For http </span></span><br><span class="line">Rule added</span><br><span class="line">Rule added (v6)</span><br><span class="line">➜  ~ ufw allow 443  <span class="comment"># For https </span></span><br><span class="line">Rule added</span><br><span class="line">Rule added (v6)</span><br><span class="line">➜  ~ ufw status</span><br><span class="line">Status: active</span><br><span class="line"></span><br><span class="line">To                         Action      From</span><br><span class="line">--                         ------      ----</span><br><span class="line">22                         ALLOW       Anywhere</span><br><span class="line">80                         ALLOW       Anywhere</span><br><span class="line">443                        ALLOW       Anywhere</span><br><span class="line">22 (v6)                    ALLOW       Anywhere (v6)</span><br><span class="line">80 (v6)                    ALLOW       Anywhere (v6)</span><br><span class="line">443 (v6)                   ALLOW       Anywhere (v6)</span><br></pre></td></tr></table></figure><p><strong>Note</strong>:For enhanced security, you can change default SSH port 22 to other number.</p><p>Now you will not be able to access the service with <a href="https://dev.saltynote.com" target="_blank" rel="noopener">https://dev.saltynote.com</a>.</p><h2 id="All-Set-Now-🎉"><a href="#All-Set-Now-🎉" class="headerlink" title="All Set Now! 🎉"></a>All Set Now! 🎉</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Last post &lt;a href=&quot;https://hzhou.me/2020/12/23/ubuntu-server-setup/&quot;&gt;Ubuntu Server Setup&lt;/a&gt;, I talked about the basic setup for an Ubuntu server. In this post, I will share some details about the setup for
saltynote server.&lt;/p&gt;
    
    </summary>
    
      <category term="程序员的日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    
      <category term="日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="Ubuntu" scheme="https://hzhou.me/tags/Ubuntu/"/>
    
      <category term="SaltyNote" scheme="https://hzhou.me/tags/SaltyNote/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu Server Setup</title>
    <link href="https://hzhou.me/2020/12/23/Ubuntu-Server-Setup/"/>
    <id>https://hzhou.me/2020/12/23/Ubuntu-Server-Setup/</id>
    <published>2020-12-24T06:28:32.000Z</published>
    <updated>2023-10-21T04:38:34.578Z</updated>
    
    <content type="html"><![CDATA[<p>This is an opinionated memo that lists the steps to set up an Ubuntu server for web service or website.</p><a id="more"></a><h2 id="1-General-Initialization"><a href="#1-General-Initialization" class="headerlink" title="1. General Initialization"></a>1. General Initialization</h2><p>The step 1 is what I will do for all new servers, even for my personal Linux laptop.</p><h3 id="1-1-Update-Server-first"><a href="#1-1-Update-Server-first" class="headerlink" title="1.1 Update Server first"></a>1.1 Update Server first</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This step may take some time, just be patient</span></span><br><span class="line">sudo apt update &amp;&amp; sudo apt upgrade -y</span><br></pre></td></tr></table></figure><p>When this step is done, you can restart your server. But usually, I will restart after I have everything installed.</p><h3 id="1-2-Install-Basic-Tools"><a href="#1-2-Install-Basic-Tools" class="headerlink" title="1.2 Install Basic Tools"></a>1.2 Install Basic Tools</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Maybe most of them are already bundled with Ubuntu</span></span><br><span class="line">sudo apt install git vim curl wget zsh htop</span><br></pre></td></tr></table></figure><p>I really like <code>zsh</code>, and I will also enable <a href="https://ohmyz.sh/" target="_blank" rel="noopener">oh-my-zsh</a>. But this is optional, even I highly recommend it.</p><h2 id="2-Setup-for-Web-Server"><a href="#2-Setup-for-Web-Server" class="headerlink" title="2. Setup for Web Server"></a>2. Setup for Web Server</h2><h3 id="2-1-Install-Necessary-Software"><a href="#2-1-Install-Necessary-Software" class="headerlink" title="2.1 Install Necessary Software"></a>2.1 Install Necessary Software</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openjdk-11-jre mariadb-server nginx</span><br></pre></td></tr></table></figure><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4><p>I install open Java 11 here, based on your own requirement, you can either install Java 8 or Java 14, whatever you want.The reason why I just install JRE not JDK is because I will only need Java Runtime in this server, and I will never try to compile or build any Java projects.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Check whether java is installed correctly</span></span><br><span class="line">root@dev:~<span class="comment"># java -version</span></span><br><span class="line">openjdk version <span class="string">"11.0.9.1"</span> 2020-11-04</span><br><span class="line">OpenJDK Runtime Environment (build 11.0.9.1+1-Ubuntu-0ubuntu1.20.04)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 11.0.9.1+1-Ubuntu-0ubuntu1.20.04, mixed mode, sharing)</span><br></pre></td></tr></table></figure><h4 id="MariaDB"><a href="#MariaDB" class="headerlink" title="MariaDB"></a>MariaDB</h4><p>It is almost the same as MySQL. Personally, I choose Mariadb these days.An important reason is that they have different licenses.</p><ul><li><a href="https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client" target="_blank" rel="noopener">MariaDB</a> is LGPL 2.1.</li><li><a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java" target="_blank" rel="noopener">MySQL</a> is GPL 2.0, which is not compatible with MIT license.</li></ul><p>If you take Open Source seriously, this is something that you should care. <a href="http://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html" target="_blank" rel="noopener">如何选择开源许可证</a></p><p><strong>Configure MariaDB</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br><span class="line"><span class="comment"># Select "Yes" to the end</span></span><br></pre></td></tr></table></figure><p><strong>Verify MariaDB</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># You should see similar output as below:</span></span><br><span class="line">root@dev:~<span class="comment"># mysql -u root -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 57</span><br><span class="line">Server version: 10.3.25-MariaDB-0ubuntu0.20.04.1 Ubuntu 20.04</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt;</span><br></pre></td></tr></table></figure><h4 id="NginX"><a href="#NginX" class="headerlink" title="NginX"></a>NginX</h4><p>As a reverse proxy, NginX is very helpful. Usually, I use it as a load balancer.</p><p>Simply open <code>http://your-server-ip</code>, you will see a page showing these words</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Welcome to nginx!</span><br><span class="line">If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</span><br><span class="line"></span><br><span class="line">For online documentation and support please refer to nginx.org.</span><br><span class="line">Commercial support is available at nginx.com.</span><br><span class="line"></span><br><span class="line">Thank you for using nginx.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is an opinionated memo that lists the steps to set up an Ubuntu server for web service or website.&lt;/p&gt;
    
    </summary>
    
      <category term="程序员的日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    
      <category term="日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="Ubuntu" scheme="https://hzhou.me/tags/Ubuntu/"/>
    
      <category term="SaltyNote" scheme="https://hzhou.me/tags/SaltyNote/"/>
    
  </entry>
  
  <entry>
    <title>Wider Github and Zhihu</title>
    <link href="https://hzhou.me/2019/01/28/Wider-Github-and-Zhihu/"/>
    <id>https://hzhou.me/2019/01/28/Wider-Github-and-Zhihu/</id>
    <published>2019-01-29T07:27:19.000Z</published>
    <updated>2023-10-21T04:38:34.578Z</updated>
    
    <content type="html"><![CDATA[<p>The main div for GitHub and Zhihu is too narrow, which makes my high-resolution screen not that useful. In this case, I update some exiting stylish script to improve.</p><a id="more"></a> <p>You can download the stylish <a href="/file/stylus-2019-02-02.json">here</a>, and import it to <a href="https://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne" target="_blank" rel="noopener">stylus</a>.</p><p><strong>BTW</strong>: I have some some hard-coded style for my 2560 x 1440(or similar) screen. I also fix the style for github home page.</p><p>Another improve for github - <strong><em>add personal&amp;star links in head menu</em></strong> <img src="/img/2019-01-28-23.png" alt="add Personal Link into Headder" title="add Personal Link into Headder"> This is a <a href="https://tampermonkey.net/" target="_blank" rel="noopener">tampermonkey</a> script, which can be download <a href="https://greasyfork.org/en/scripts/368459-github-com-extra-header-links-modified" target="_blank" rel="noopener">here</a>.  (This is also a modified version from existing one, thanks for the good work from open source contributors)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The main div for GitHub and Zhihu is too narrow, which makes my high-resolution screen not that useful. In this case, I update some exiting stylish script to improve.&lt;/p&gt;
    
    </summary>
    
      <category term="计算机那些事" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
      <category term="网站" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/%E7%BD%91%E7%AB%99/"/>
    
    
      <category term="GitHub" scheme="https://hzhou.me/tags/GitHub/"/>
    
      <category term="Zhihu" scheme="https://hzhou.me/tags/Zhihu/"/>
    
      <category term="Stylish" scheme="https://hzhou.me/tags/Stylish/"/>
    
  </entry>
  
  <entry>
    <title>install netease music in Ubuntu</title>
    <link href="https://hzhou.me/2018/05/15/install-netease-music-in-Ubuntu/"/>
    <id>https://hzhou.me/2018/05/15/install-netease-music-in-Ubuntu/</id>
    <published>2018-05-16T00:17:40.000Z</published>
    <updated>2023-10-21T04:38:34.578Z</updated>
    
    <content type="html"><![CDATA[<p>在18.04出来之前，一直用Ubuntu的16.04，安装网易音乐之后，只需要在<code>/usr/share/applications/netease-cloud-music.desktop</code> 添加一个 <code>--no-sandbox</code>就可以解决了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exec&#x3D;netease-cloud-music --no-sandbox %U</span><br></pre></td></tr></table></figure><a id="more"></a><p>但是等我升级之后，网易云音乐怎么也启动不了。后来在<a href="https://www.zhihu.com/question/268165660/answer/377142494" target="_blank" rel="noopener">知乎</a>中再次看到了解决方法，顺便在此记录一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要在网上搜索并下载网易云音乐1.0.0版本.deb</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先创建软件包目录</span></span><br><span class="line">mkdir -p extract/DEBIAN</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用dpkg解压</span></span><br><span class="line">dpkg-deb -x neteasemusic.deb extract/</span><br><span class="line">dpkg-deb -e neteasemusic.deb extract/DEBIAN</span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后用文本编辑器打开extract/DEBIAN/control，找到Depends行，</span></span><br><span class="line"><span class="comment"># 删除libqt5libqgtk2，删除libfontconfig1 (&gt;= 2.11.94)中的(&gt;= 2.11.94)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后重新打包：</span></span><br><span class="line"><span class="comment"># 建立软件包生成目录</span></span><br><span class="line">mkdir build</span><br><span class="line"><span class="comment"># 重新打包 注意: build/之前是有空格的，如果你手动输入的话</span></span><br><span class="line">dpkg-deb -b extract/ build/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后重新安装:</span></span><br><span class="line">dpkg -i  *.deb</span><br></pre></td></tr></table></figure><p>如果你嫌麻烦，你可以直接下载我修改好的了，<a href="/file/netease-cloud-music_1.0.0_amd64_modified.deb">netease-cloud-music_1.0.0_amd64_modified.deb</a>. 如果你不放心，可以自己打包，也不是很复杂。</p><p>Note: 在这个方式中你不加<code>--no-sandbox</code>也没有问题。</p><h3 id="海外国内解锁音乐"><a href="#海外国内解锁音乐" class="headerlink" title="海外国内解锁音乐"></a>海外国内解锁音乐</h3><p>点击<a href="https://github.com/fengjueming/unblock-NetEaseMusic" target="_blank" rel="noopener">unblock-NetEaseMusic</a>获取更多信息。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在18.04出来之前，一直用Ubuntu的16.04，安装网易音乐之后，只需要在&lt;code&gt;/usr/share/applications/netease-cloud-music.desktop&lt;/code&gt; 添加一个 &lt;code&gt;--no-sandbox&lt;/code&gt;就可以解决了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Exec&amp;#x3D;netease-cloud-music --no-sandbox %U&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="程序员的日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="Ubuntu" scheme="https://hzhou.me/tags/Ubuntu/"/>
    
      <category term="网易" scheme="https://hzhou.me/tags/%E7%BD%91%E6%98%93/"/>
    
  </entry>
  
  <entry>
    <title>Note: Install tp-link AC1200 t4u driver for ubuntu</title>
    <link href="https://hzhou.me/2017/12/19/Install-tp-link-AC1200-t4u-driver-for-ubuntu/"/>
    <id>https://hzhou.me/2017/12/19/Install-tp-link-AC1200-t4u-driver-for-ubuntu/</id>
    <published>2017-12-20T03:14:09.000Z</published>
    <updated>2023-10-21T04:38:34.575Z</updated>
    
    <content type="html"><![CDATA[<p>Bought a TP-link AC1200 wifi adapter long before and not used it so far. Yesterday, I find it again when I collected my old stuff.Since my old Dell laptop does not support 5G channel, and its built-in wifi adapter sucks, why not have a try!!!</p><a id="more"></a><p>Searched and tried a lot, and finally, I find the <code>correct one</code>(which works for me).The link is: <a href="https://ubuntuforums.org/showthread.php?t=2340769" target="_blank" rel="noopener">https://ubuntuforums.org/showthread.php?t=2340769</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Uninstall rtl8812au-dkms if you installed it as other solutions told you</span></span><br><span class="line">sudo apt-get purge rtl8812au-dkms</span><br><span class="line"><span class="comment"># Install the necessary software</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install git dkms</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span>  https://github.com/ptpt52/rtl8812au.git</span><br><span class="line"><span class="built_in">cd</span> rtl8812au</span><br><span class="line">sudo make -f Makefile.dkms install</span><br><span class="line">sudo modprobe rtl8812au</span><br><span class="line"><span class="comment"># Now the hardware should work for you</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Bought a TP-link AC1200 wifi adapter long before and not used it so far. Yesterday, I find it again when I collected my old stuff.
Since my old Dell laptop does not support 5G channel, and its built-in wifi adapter sucks, why not have a try!!!&lt;/p&gt;
    
    </summary>
    
      <category term="程序员的日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="Ubuntu" scheme="https://hzhou.me/tags/Ubuntu/"/>
    
      <category term="WIFI" scheme="https://hzhou.me/tags/WIFI/"/>
    
      <category term="MINT" scheme="https://hzhou.me/tags/MINT/"/>
    
  </entry>
  
  <entry>
    <title>A simple workaround for &quot;Cannot find a (Map) Key deserializer&quot;</title>
    <link href="https://hzhou.me/2017/08/23/A-simple-workaround-for-Cannot-find-a-Map-Key-deserializer/"/>
    <id>https://hzhou.me/2017/08/23/A-simple-workaround-for-Cannot-find-a-Map-Key-deserializer/</id>
    <published>2017-08-24T02:15:56.000Z</published>
    <updated>2023-10-21T04:38:34.575Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jackson InvalidDefinitionException: </span><br><span class="line">Cannot find a (Map) Key deserializer for type [simple type, class XXXX]</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="How-to-reproduce"><a href="#How-to-reproduce" class="headerlink" title="How to reproduce"></a>How to reproduce</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// assume there are many teams of students in a class, and each group has a team leader</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// getter, setter, hashcode, equals and toString </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Class</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;Student, List&lt;Student&gt;&gt; teamMap;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// getter and setter</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Test Code</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Class c = <span class="keyword">new</span> Class();</span><br><span class="line"></span><br><span class="line">        Student leader = <span class="keyword">new</span> Student();</span><br><span class="line">        leader.setAge(<span class="number">20</span>);</span><br><span class="line">        leader.setName(<span class="string">"Salty Egg"</span>);</span><br><span class="line"></span><br><span class="line">        Student s = <span class="keyword">new</span> Student();</span><br><span class="line">        s.setAge(<span class="number">20</span>);</span><br><span class="line">        s.setName(<span class="string">"Sweet Egg"</span>);</span><br><span class="line">        Map&lt;Student, List&lt;Student&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        List&lt;Student&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(s);</span><br><span class="line">        map.put(leader, list);</span><br><span class="line">        c.setTeamMap(map);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        String json = mapper.writeValueAsString(c);</span><br><span class="line">        System.out.println(json); <span class="comment">// this line can be printed</span></span><br><span class="line"></span><br><span class="line">        Class _c = mapper.readValue(json, Class<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(_c.getTeamMap());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>For serialization, there will not be any problem, and we can have the print-out</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"teamMap"</span>:&#123;<span class="attr">"Student&#123;name='Salty Egg', age=20&#125;"</span>:[&#123;<span class="attr">"name"</span>:<span class="string">"Sweet Egg"</span>,<span class="attr">"age"</span>:<span class="number">20</span>&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure><p>We can find that when serializing the map key, <code>Jackson</code> will call <code>toString()</code> method by default.</p><h3 id="How-to-fix-this"><a href="#How-to-fix-this" class="headerlink" title="How to fix this"></a>How to <code>fix</code> this</h3><p>The standard solution is to write the <code>key serialize/deserialize</code> for <code>Jackson</code>, what if I do not wanna it as this?!</p><h6 id="Another-workaround"><a href="#Another-workaround" class="headerlink" title="Another workaround"></a>Another workaround</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyValueContainer</span>&lt;<span class="title">K</span>, <span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> K key;</span><br><span class="line">    <span class="keyword">private</span> V value;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">KeyValueContainer</span><span class="params">()</span></span>&#123;&#125; <span class="comment">// this is required by Jackson</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">KeyValueContainer</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.key = key;</span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// getter and setter</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ObjectUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;K, V&gt; List&lt;KeyValueContainer&lt;K, V&gt;&gt; toList(Map&lt;K, V&gt; map) &#123;</span><br><span class="line">        <span class="keyword">if</span> (map == <span class="keyword">null</span> || map.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map.entrySet().stream()</span><br><span class="line">                .map(e -&gt; <span class="keyword">new</span> KeyValueContainer&lt;&gt;(e.getKey(), e.getValue()))</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;K, V&gt; <span class="function">Map&lt;K, V&gt; <span class="title">toMap</span><span class="params">(List&lt;KeyValueContainer&lt;K, V&gt;&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (list == <span class="keyword">null</span> || list.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list.stream()</span><br><span class="line">                .collect(Collectors.toMap(KeyValueContainer::getKey, KeyValueContainer::getValue));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// updated Class class</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Class</span> </span>&#123;</span><br><span class="line">    <span class="meta">@JsonIgnore</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;Student, List&lt;Student&gt;&gt; teamMap;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getter and setter</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"team"</span>)</span><br><span class="line">    <span class="keyword">private</span> List&lt;KeyValueContainer&lt;Student, List&lt;Student&gt;&gt;&gt; getTeamList() &#123;</span><br><span class="line">        <span class="keyword">return</span> ObjectUtils.toList(teamMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"team"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setTeamList</span><span class="params">(List&lt;KeyValueContainer&lt;Student, List&lt;Student&gt;&gt;&gt; list)</span> </span>&#123;</span><br><span class="line">        teamMap = ObjectUtils.toMap(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then, with the same test case above, we can have the following result:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;team&quot;:[&#123;&quot;key&quot;:&#123;&quot;name&quot;:&quot;Salty Egg&quot;,&quot;age&quot;:20&#125;,&quot;value&quot;:[&#123;&quot;name&quot;:&quot;Sweet Egg&quot;,&quot;age&quot;:20&#125;]&#125;]&#125;</span><br><span class="line">&#123;Student&#123;name&#x3D;&#39;Salty Egg&#39;, age&#x3D;20&#125;&#x3D;[Student&#123;name&#x3D;&#39;Sweet Egg&#39;, age&#x3D;20&#125;]&#125;</span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ol><li>We can have new <code>getter &amp; setter</code> as <code>private</code>, the third-party developers will not call it with mistakes</li><li>Each time, when do serialization, it will create new <code>List</code>, which may bring a bit performance issue.</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jackson InvalidDefinitionException: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cannot find a (Map) Key deserializer for type [simple type, class XXXX]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="计算机那些事" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
      <category term="Java" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/Java/"/>
    
    
      <category term="Jackson" scheme="https://hzhou.me/tags/Jackson/"/>
    
      <category term="Json" scheme="https://hzhou.me/tags/Json/"/>
    
      <category term="deserialize" scheme="https://hzhou.me/tags/deserialize/"/>
    
  </entry>
  
  <entry>
    <title>JSON serialization and deserialization: Circular References</title>
    <link href="https://hzhou.me/2017/08/10/JSON-serialization-and-deserialization-circular-references/"/>
    <id>https://hzhou.me/2017/08/10/JSON-serialization-and-deserialization-circular-references/</id>
    <published>2017-08-11T01:34:02.000Z</published>
    <updated>2023-10-21T04:38:34.576Z</updated>
    
    <content type="html"><![CDATA[<p>In recent times, I did a lot practise of micro-service with spring boot. And handled a lot of JSON(Jackson) related serialization and deserialization issues. In this post, I will share some tricky how to “fix” Circular References.</p><a id="more"></a><p><strong>Note:</strong> What I want to do are:</p><ol><li>I can serialize object to JSON string</li><li>I can deserialize the JSON string to the <em>same</em> object(<em>at least all important info retains</em>)</li></ol><h3 id="Circular-References"><a href="#Circular-References" class="headerlink" title="Circular References"></a>Circular References</h3><p>Let’s see a quick demo first: (<code>Book</code> has its <code>Author</code>, while <code>Author</code> keeps a list of his/her <code>Book</code>s)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Author author;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// getter &amp; setter </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Author</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Book&gt; books;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// getter &amp; setter </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now, we can have a serialization sample as:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    Book book = <span class="keyword">new</span> Book();</span><br><span class="line">    book.setName(<span class="string">"Book"</span>);</span><br><span class="line"></span><br><span class="line">    Author author = <span class="keyword">new</span> Author();</span><br><span class="line">    author.setName(<span class="string">"Author"</span>);</span><br><span class="line">    List&lt;Book&gt; books = <span class="keyword">new</span> ArrayList&lt;Book&gt;();</span><br><span class="line">    books.add(book);</span><br><span class="line">    author.setBooks(books);</span><br><span class="line"></span><br><span class="line">    book.setAuthor(author);</span><br><span class="line"></span><br><span class="line">    ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    System.out.println(mapper.writeValueAsString(book));</span><br><span class="line">    System.out.println(mapper.writeValueAsString(author));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then it will throw this exception:</p><p><code>Exception in thread &quot;main&quot; com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: ...</code></p><p><span style="color:red;">JSON is pretty hard to demonstrate the data with Circular References</span></p><h5 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h5><p>Thx to Jackson, with <a href="http://wiki.fasterxml.com/JacksonFeatureObjectIdentity" target="_blank" rel="noopener">@JsonIdentityInfo</a>, we can easy fix this issue.After I add <code>@JsonIdentityInfo(generator=ObjectIdGenerators.IntSequenceGenerator.class, property=&quot;@id&quot;)</code> to both class, then I can have the JSON string as:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"@id"</span>:<span class="number">1</span>,<span class="attr">"name"</span>:<span class="string">"Book"</span>,<span class="attr">"author"</span>:&#123;<span class="attr">"@id"</span>:<span class="number">2</span>,<span class="attr">"name"</span>:<span class="string">"Author"</span>,<span class="attr">"books"</span>:[<span class="number">1</span>]&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"@id"</span>:<span class="number">1</span>,<span class="attr">"name"</span>:<span class="string">"Author"</span>,<span class="attr">"books"</span>:[&#123;<span class="attr">"@id"</span>:<span class="number">2</span>,<span class="attr">"name"</span>:<span class="string">"Book"</span>,<span class="attr">"author"</span>:<span class="number">1</span>&#125;]&#125;</span><br></pre></td></tr></table></figure><p>However, I am not sure whether this JSON string can be deserialized by other libraries(e.g. GSON), or other languages, my guess is NOT.</p><p><strong>Note:</strong> Think twice before using it!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In recent times, I did a lot practise of micro-service with spring boot. And handled a lot of JSON(Jackson) related serialization and deserialization issues. In this post, I will share some tricky how to “fix” Circular References.&lt;/p&gt;
    
    </summary>
    
      <category term="计算机那些事" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
      <category term="Java" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/Java/"/>
    
    
      <category term="Jackson" scheme="https://hzhou.me/tags/Jackson/"/>
    
      <category term="Json" scheme="https://hzhou.me/tags/Json/"/>
    
      <category term="deserialize" scheme="https://hzhou.me/tags/deserialize/"/>
    
  </entry>
  
  <entry>
    <title>Jetbrains-toolbox connection issue with OpenSSL 1.1+</title>
    <link href="https://hzhou.me/2017/04/23/Jetbrains-toolbox-connection-issue-with-OpenSSL-1-1/"/>
    <id>https://hzhou.me/2017/04/23/Jetbrains-toolbox-connection-issue-with-OpenSSL-1-1/</id>
    <published>2017-04-24T00:33:12.000Z</published>
    <updated>2023-10-21T04:38:34.576Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个以Java为主开发语言的攻城狮，我觉得我已经离不开Jetbrains的产品了。JB公司前段时间推出的toolbox小工具我也在第一时间使用了（不用的话根本就追不上版本帝的更新节奏）。然而，最近我吧我的系统改为深度的Linux(15.4)之后，我发现toolbox挂了。。。挂了。。。</p><a id="more"></a><p><img src="/img/toolbox-error.png" alt="链接失败"></p><p>一阵Google之后，找到了这个<a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/115000160850--resolved-JetBrains-Toolbox-Error-creating-SSL-context" target="_blank" rel="noopener">https://intellij-support.jetbrains.com/hc/en-us/community/posts/115000160850--resolved-JetBrains-Toolbox-Error-creating-SSL-context</a>里面提到在新版本中会修复这个问题，问题是我不能就这么坐以待毙等下一个版本吧。</p><p>于是在(这个里面)[<a href="https://youtrack.jetbrains.com/issue/ALL-1486]找到了临时的解决方法。" target="_blank" rel="noopener">https://youtrack.jetbrains.com/issue/ALL-1486]找到了临时的解决方法。</a></p><blockquote><p>错误原因就是toolbox不支持openssl1.1+版本。</p></blockquote><h3 id="临时解决方案如下（方法来自上述链接）"><a href="#临时解决方案如下（方法来自上述链接）" class="headerlink" title="临时解决方案如下（方法来自上述链接）"></a>临时解决方案如下（方法来自上述链接）</h3><ol><li>安装旧版本的openssl（需要<code>sudo</code>）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="string">"/opt/openssl-1.0.2k"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"/opt/openssl-1.0.2k"</span></span><br><span class="line">curl -O https://www.openssl.org/<span class="built_in">source</span>/openssl-1.0.2k.tar.gz</span><br><span class="line">tar xzf openssl-1.0.2k.tar.gz</span><br><span class="line"><span class="built_in">cd</span> openssl-1.0.2k</span><br><span class="line">./config shared --prefix=<span class="string">"/opt/openssl-1.0.2k"</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><ol start="2"><li>添加自己的启动脚本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/opt/openssl-1.0.2k/lib</span><br><span class="line"><span class="built_in">exec</span> <span class="variable">$HOME</span>/bin/jetbrains-toolbox <span class="string">"<span class="variable">$@</span>"</span></span><br></pre></td></tr></table></figure><h3 id="至此，toolbox应该可以正常启动了。"><a href="#至此，toolbox应该可以正常启动了。" class="headerlink" title="至此，toolbox应该可以正常启动了。"></a>至此，toolbox应该可以正常启动了。</h3><p>Note: 如果设置了toolbox的开机启动，就会发现还是会有链接问题，只需要关了，再通过启动脚本打开就行。坐等JB公司更新toolbox新版本。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一个以Java为主开发语言的攻城狮，我觉得我已经离不开Jetbrains的产品了。JB公司前段时间推出的toolbox小工具我也在第一时间使用了（不用的话根本就追不上版本帝的更新节奏）。然而，最近我吧我的系统改为深度的Linux(15.4)之后，我发现toolbox挂了。。。挂了。。。&lt;/p&gt;
    
    </summary>
    
      <category term="程序员的日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    
      <category term="普通" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/%E6%99%AE%E9%80%9A/"/>
    
    
      <category term="Jetbrains" scheme="https://hzhou.me/tags/Jetbrains/"/>
    
      <category term="Toolbox" scheme="https://hzhou.me/tags/Toolbox/"/>
    
      <category term="OpenSSL" scheme="https://hzhou.me/tags/OpenSSL/"/>
    
  </entry>
  
  <entry>
    <title>Quick start: swagger, spring-boot and Jersey</title>
    <link href="https://hzhou.me/2017/02/13/Quick-start-swagger-spring-boot-and-Jersey/"/>
    <id>https://hzhou.me/2017/02/13/Quick-start-swagger-spring-boot-and-Jersey/</id>
    <published>2017-02-13T21:56:40.000Z</published>
    <updated>2023-10-21T04:38:34.577Z</updated>
    
    <content type="html"><![CDATA[<p>在做服务器端API开发的时候，如何保持文档的更新是一个比较头疼的问题。试过写成word文档，缺点很明显：</p><ol><li>更新不及时</li><li>不便于查阅</li></ol><p>也试过用其他的在线API管理工具，太懒了，总是无法保持更新。而且大多数服务还是收费的。  </p><a id="more"></a><p>最近一次，我在试用<a href="https://www.eolinker.com/" target="_blank" rel="noopener">EOApi</a>，终于被它的访问速度打败了（貌似这个对path parameter支持的也不是很好），我不得不寻找新的工具。</p><p>至于为什么最后会选择Swagger，我已经记不清了。其实对于Swagger我一直是有耳闻的，只是一开始我玩弄Swagger Editor的时候，我以为它只能从YAML/JSON生成Java代码的呢。没想到居然反着也行。</p><p>长话短说，在此就简单介绍一下如果做Swagger， Spring-Boot和Jersey的快速集成。（其实我是根据这个链接来学习的: <a href="http://tech.asimio.net/2016/04/05/Microservices-using-Spring-Boot-Jersey-Swagger-and-Docker.html" target="_blank" rel="noopener">点我</a>）</p><h3 id="1-建一个Spring-Boot的项目，添加必要的依赖"><a href="#1-建一个Spring-Boot的项目，添加必要的依赖" class="headerlink" title="1. 建一个Spring-Boot的项目，添加必要的依赖"></a>1. 建一个<code>Spring-Boot</code>的项目，添加必要的依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jersey<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.swagger<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>swagger-jersey2-jaxrs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-配置Jersey和Swagger"><a href="#2-配置Jersey和Swagger" class="headerlink" title="2. 配置Jersey和Swagger"></a>2. 配置<code>Jersey</code>和<code>Swagger</code></h3><p><strong><em>Note:</em></strong> Swagger不和Jersey共用一个Jackson的<code>MapperObject</code>， 所以你如果要让你的Model/Entity显示为<code>SNAKE_CASE</code>，你需要加上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">io.swagger.util.Json.mapper().setPropertyNamingStrategy(PropertyNamingStrategy.SNAKE_CASE);</span><br></pre></td></tr></table></figure><p>但是这也会导致一个问题，如果你以<code>http://127.0.0.1:8080/swagger.json</code>来获取内容，你会发现那些<code>basePath</code>和<code>operationId</code>也变成了<code>SNAKE_CASE</code>,Swagger-UI会报错。其实这个时候你只要换成<code>http://127.0.0.1:8080/swagger.yaml</code>一切就妥妥的了。</p><p><strong><em>Note:</em></strong> 在<code>Spring-boot</code>中，所有的Jesey的EndPoint必须一个个添加，不能直接<code>package(XXX)</code>之类的，<code>Spring-boot</code>官方文档有提到，我之前踩过这个坑。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JerseyConfig</span> <span class="keyword">extends</span> <span class="title">ResourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.jersey.application-path:/&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String apiPath;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JerseyConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.registerEndpoints();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Register components where DI is needed</span></span><br><span class="line">        <span class="keyword">this</span>.configureSwagger();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">registerEndpoints</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.register(HelloWorldResource<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">// Available at /&lt;Jersey's servlet path&gt;/application.wadl</span></span><br><span class="line">        <span class="keyword">this</span>.register(WadlResource<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">configureSwagger</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Available at localhost:port/swagger.json</span></span><br><span class="line">        <span class="keyword">this</span>.register(ApiListingResource<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">this</span>.register(SwaggerSerializers<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        BeanConfig config = <span class="keyword">new</span> BeanConfig();</span><br><span class="line">        config.setConfigId(<span class="string">"springboot-jersey-swagger-docker-example"</span>);</span><br><span class="line">        config.setTitle(<span class="string">"Spring Boot + Jersey + Swagger + Docker Example"</span>);</span><br><span class="line">        config.setVersion(<span class="string">"v1"</span>);</span><br><span class="line">        config.setContact(<span class="string">"Hao Zhou"</span>);</span><br><span class="line">        config.setSchemes(<span class="keyword">new</span> String[]&#123;<span class="string">"http"</span>, <span class="string">"https"</span>&#125;);</span><br><span class="line">        config.setBasePath(<span class="keyword">this</span>.apiPath);</span><br><span class="line">        config.setResourcePackage(<span class="string">"me.hzhou.resource"</span>);</span><br><span class="line">        config.setPrettyPrint(<span class="keyword">true</span>);</span><br><span class="line">        config.setScan(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// it does not work as below</span></span><br><span class="line">        <span class="comment">//config.getSwagger().setSecurityDefinitions(XX);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// if you want to have you pojo parse as SNAKE_CASE, please add following line,</span></span><br><span class="line">        <span class="comment">// also in this case, you should use swagger.yaml, rather than swagger.json for output, as</span></span><br><span class="line">        <span class="comment">// some swagger keywords, such as operationId, will be parsed as operation_id. - syntax error</span></span><br><span class="line">        <span class="comment">//io.swagger.util.Json.mapper().setPropertyNamingStrategy(PropertyNamingStrategy.SNAKE_CASE);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-添加HelloWorld-resource"><a href="#3-添加HelloWorld-resource" class="headerlink" title="3. 添加HelloWorld resource"></a>3. 添加<code>HelloWorld resource</code></h3><p><strong><em>Note:</em></strong> <code>@SwaggerDefinition</code>这里面不是必要的，我加在这里只是为了提示Swagger有security方面的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Path</span>(<span class="string">"/"</span>)</span><br><span class="line"><span class="meta">@Consumes</span>(MediaType.APPLICATION_JSON)</span><br><span class="line"><span class="meta">@Produces</span>(MediaType.APPLICATION_JSON)</span><br><span class="line"></span><br><span class="line"><span class="meta">@Api</span>(value = <span class="string">"Hello resource"</span>, produces = <span class="string">"application/json"</span>)</span><br><span class="line"><span class="meta">@SwaggerDefinition</span>(securityDefinition =</span><br><span class="line"><span class="meta">@SecurityDefinition</span>(apiKeyAuthDefintions = &#123;</span><br><span class="line">        <span class="meta">@ApiKeyAuthDefinition</span>(key = <span class="string">"basic"</span>, name = <span class="string">"Authorization"</span>, in = ApiKeyAuthDefinition.ApiKeyLocation.HEADER)</span><br><span class="line">&#125;))</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldResource</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(HelloWorldResource<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GET</span></span><br><span class="line">    <span class="meta">@Path</span>(<span class="string">"hello/&#123;name&#125;"</span>)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(</span><br><span class="line">            value = <span class="string">"Get a hello resource."</span></span><br><span class="line">            , response = Hello<span class="class">.<span class="keyword">class</span></span></span><br><span class="line"><span class="class">            //,<span class="title">responseContainer</span> </span>= <span class="string">"List"</span> <span class="comment">// if returned is a list of objects</span></span><br><span class="line">            <span class="comment">//,authorizations = @Authorization(value = "basic")</span></span><br><span class="line">    )</span><br><span class="line">    <span class="meta">@ApiResponses</span>(value = &#123;</span><br><span class="line">            <span class="meta">@ApiResponse</span>(code = <span class="number">200</span>, message = <span class="string">"hello resource found"</span>),</span><br><span class="line">            <span class="meta">@ApiResponse</span>(code = <span class="number">404</span>, message = <span class="string">"Given admin user not found"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">getHelloVersionInUrl</span><span class="params">(@ApiParam @PathParam(<span class="string">"name"</span>)</span> String name) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"404"</span>.equals(name)) &#123;</span><br><span class="line">            <span class="keyword">return</span> Response.status(Response.Status.NOT_FOUND).build();</span><br><span class="line">        &#125;</span><br><span class="line">        Hello result = <span class="keyword">new</span> Hello();</span><br><span class="line">        result.setMsg(String.format(<span class="string">"Hello %s. %s"</span>, name, <span class="string">"welcome to swagger"</span>));</span><br><span class="line">        <span class="keyword">return</span> Response.status(Response.Status.OK).entity(result).build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-最后借助Swagger-UI来显示我们的API文档"><a href="#4-最后借助Swagger-UI来显示我们的API文档" class="headerlink" title="4. 最后借助Swagger-UI来显示我们的API文档"></a>4. 最后借助<code>Swagger-UI</code>来显示我们的API文档</h3><p><img src="/img/swagger-ui-api.png" alt="Swagger UI"></p><h3 id="5-后续"><a href="#5-后续" class="headerlink" title="5. 后续"></a>5. 后续</h3><p>其实我还没有整明白如果实现<code>http-header</code>的<code>basic authorization</code>。等我哪天知道了再过来更新。</p><h3 id="6-源码"><a href="#6-源码" class="headerlink" title="6. 源码"></a>6. 源码</h3><p><a href="https://github.com/zhouhao/swagger-spring-boot-jersey" target="_blank" rel="noopener">swagger-spring-boot-jersey</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在做服务器端API开发的时候，如何保持文档的更新是一个比较头疼的问题。试过写成word文档，缺点很明显：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;更新不及时&lt;/li&gt;
&lt;li&gt;不便于查阅&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;也试过用其他的在线API管理工具，太懒了，总是无法保持更新。而且大多数服务还是收费的。  &lt;/p&gt;
    
    </summary>
    
      <category term="计算机那些事" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    
      <category term="服务" scheme="https://hzhou.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%82%A3%E4%BA%9B%E4%BA%8B/%E6%9C%8D%E5%8A%A1/"/>
    
    
      <category term="Java" scheme="https://hzhou.me/tags/Java/"/>
    
      <category term="Swagger" scheme="https://hzhou.me/tags/Swagger/"/>
    
      <category term="Spring Boot" scheme="https://hzhou.me/tags/Spring-Boot/"/>
    
      <category term="Jersey" scheme="https://hzhou.me/tags/Jersey/"/>
    
  </entry>
  
  <entry>
    <title>Hexo site search plugin with Tipue</title>
    <link href="https://hzhou.me/2016/08/22/local-search-with-tipue/"/>
    <id>https://hzhou.me/2016/08/22/local-search-with-tipue/</id>
    <published>2016-08-23T04:22:01.000Z</published>
    <updated>2023-10-21T04:38:34.578Z</updated>
    
    <content type="html"><![CDATA[<p>I used to use <a href="https://swiftype.com/" target="_blank" rel="noopener">swiftype</a> as my site search engine, however, it does not provide nay free plan now, what’s more, the <a href="https://swiftype.com/pricing" target="_blank" rel="noopener">price</a> is too high for my personal blog (Seems my previous free plan is not auto cancelled by swiftype). However, it is time to find an alternative now. And it is <a href="http://www.tipue.com/search/" target="_blank" rel="noopener">Tipue search</a>.</p><a id="more"></a><h2 id="Research"><a href="#Research" class="headerlink" title="Research"></a>Research</h2><p>I go through <a href="https://hexo.io/plugins/" target="_blank" rel="noopener">hexo plugin</a> page very carefully, and find there are 2 related plugins may be helpful for me:</p><ol><li><a href="https://github.com/PaicHyperionDev/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a>: this is XML based</li><li><a href="https://github.com/alexbruno/hexo-generator-json-content" target="_blank" rel="noopener">hexo-generator-json-content</a>: this is JSON based</li></ol><p>I tried to use the latter one(I like JSON more than XML), but find I cannot use it well, as I am not a JS expert. Also, I googled some Open-Source search engine tools, and I finally find <a href="http://www.tipue.com/search/" target="_blank" rel="noopener">TIPUE SEARCH</a></p><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>Now I have the Open-Source search engine tool and JSON generator. But the JSON generated by <code>hexo-generator-json-content</code> does not fit <code>Tipue Search</code>. Comes 2 solutions now:</p><ol><li>customize <code>hexo-generator-json-content</code></li><li>customize <code>Tipue Search</code></li></ol><p>This is not a difficult decision, and I prefer the first one.</p><p>So I create this repo: <a href="https://github.com/zhouhao/Hexo-Tipue-Search-Json" target="_blank" rel="noopener">Hexo-Tipue-Search-Json</a></p><h2 id="How-to-install-it"><a href="#How-to-install-it" class="headerlink" title="How to install it"></a>How to install it</h2><p>You can find all information you want here: <a href="https://github.com/zhouhao/Hexo-Tipue-Search-Json" target="_blank" rel="noopener">https://github.com/zhouhao/Hexo-Tipue-Search-Json</a></p><h3 id=""><a href="#" class="headerlink" title=";-)"></a>;-)</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I used to use &lt;a href=&quot;https://swiftype.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swiftype&lt;/a&gt; as my site search engine, however, it does not provide nay free plan now, what’s more, the &lt;a href=&quot;https://swiftype.com/pricing&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;price&lt;/a&gt; is too high for my personal blog (Seems my previous free plan is not auto cancelled by swiftype). However, it is time to find an alternative now. And it is &lt;a href=&quot;http://www.tipue.com/search/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tipue search&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="程序员的日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    
      <category term="普通" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/%E6%99%AE%E9%80%9A/"/>
    
    
      <category term="hexo" scheme="https://hzhou.me/tags/hexo/"/>
    
      <category term="search" scheme="https://hzhou.me/tags/search/"/>
    
  </entry>
  
  <entry>
    <title>在美拔牙</title>
    <link href="https://hzhou.me/2016/05/27/Teeth-Extraction-Boston/"/>
    <id>https://hzhou.me/2016/05/27/Teeth-Extraction-Boston/</id>
    <published>2016-05-28T03:29:01.000Z</published>
    <updated>2023-10-21T04:38:34.577Z</updated>
    
    <content type="html"><![CDATA[<p>哦耶，终于把4个智齿一次性都拔了！感觉口腔好空旷。底下就简单记录一下今天的拔牙过程。</p><a id="more"></a><h3 id="开始前"><a href="#开始前" class="headerlink" title="开始前"></a>开始前</h3><p>先是助理医生让我坐在椅子上，不由自主的深呼吸了一下，因为我也不知道接下来究竟是不是很可怕。然后助理医生搬来一堆子器械，看到那些钳子，剪子之类的，内心开始慢慢动摇了—-难道非要拔牙不可吗？没过一会，助理医生过来用棉签占了一些红色的东西在我的智齿附近涂抹，并塞了一些纱布进我口腔，当时只是感觉有点反胃，然后牙龈就开始火辣辣的了。</p><p>终于拔牙医生过来，很客气的说”How are you?”， 我都不好意思回答”I am fine”, 默默说了一句”I am a bit nervous”，认怂了。</p><h3 id="打麻醉"><a href="#打麻醉" class="headerlink" title="打麻醉"></a>打麻醉</h3><p>借助之前棉签的作用，打麻醉的时候反到没拿疼，但是还是能感觉医生在一块区域不停的把麻醉针扎来扎去。</p><h3 id="开始拔牙"><a href="#开始拔牙" class="headerlink" title="开始拔牙"></a>开始拔牙</h3><p>麻醉过后大约10到15分钟医生就准备给我拔牙了，那阵势真是有点可怕，大钳子直接伸进嘴里。第一颗（右上）很顺利，我都没感觉到就下来了，当时就想要是都这样就好了，但是我的运气就从没那么好过。第二颗（左上）的时候，我听见牙齿裂掉的声音了，日，医生和助理医生在那个牙龈处用“铲子”刮来刮去，反复拔，最后我也不知道是不是干净了，当时我一心就想快点结束。</p><p>下面两颗貌似比较麻烦，他们居然先用电动的矬子磨我牙，然后用一根铁杆借助杠杆原理往上扳我牙。他奶奶的，我当时居然感觉到痛了，无奈医生就又补了几针麻醉，然后准备先拔掉左下。也不是那么干净利落，但也是拔下来了。他们还给我缝了几针。最后一个牙齿后来还是疼，接着补了麻醉，然后终于拔下了。拔下的那一瞬间，心情顿时就舒缓了。</p><h3 id="拔牙后"><a href="#拔牙后" class="headerlink" title="拔牙后"></a>拔牙后</h3><p>口腔塞着纱布，好奇怪，一开始还能支支吾吾说几句，但是当我从CVS买完药的时候发现舌头终于撸不直了，害得我问个厕所都得打字给别人看。</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>最后就去理了个头，算是弥补一下我的形象！负分~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;哦耶，终于把4个智齿一次性都拔了！感觉口腔好空旷。底下就简单记录一下今天的拔牙过程。&lt;/p&gt;
    
    </summary>
    
      <category term="程序员的日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    
      <category term="操蛋" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/%E6%93%8D%E8%9B%8B/"/>
    
    
      <category term="拔牙" scheme="https://hzhou.me/tags/%E6%8B%94%E7%89%99/"/>
    
  </entry>
  
  <entry>
    <title>第一次看牙医-疼</title>
    <link href="https://hzhou.me/2016/05/08/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%9C%8B%E7%89%99%E5%8C%BB-%E7%96%BC/"/>
    <id>https://hzhou.me/2016/05/08/第一次看牙医-疼/</id>
    <published>2016-05-08T07:03:14.000Z</published>
    <updated>2023-10-21T04:38:34.579Z</updated>
    
    <content type="html"><![CDATA[<p>牙疼疼了快一年了，最近终于不想忍了，就预约了牙医—-整个经历就是一个大写的<strong>疼</strong>。希望我的经历能对北美想看牙医的人有点帮助。</p><a id="more"></a><p>首先，我得承认为什么拖了一年才看牙医，纯粹是因为我懒。最近正好烦恼太多，无法安静干些“大”事，于是就准备处理牙。</p><h3 id="1-找牙医"><a href="#1-找牙医" class="headerlink" title="1. 找牙医"></a>1. 找牙医</h3><p>之前问过同事，同事也给了建议，后来一拖全忘了，还好有好心人在公司内部收集了<a href="https://www.evernote.com/shard/s67/sh/c51de275-2f50-4044-9ac0-c73527a8615b/90a05af03bef5bc0" target="_blank" rel="noopener">一个牙医推荐</a>。我选了Seligman，但是没有处于任何原因。但是整个过程除了疼，还是很好的。</p><h3 id="2-预约"><a href="#2-预约" class="headerlink" title="2. 预约"></a>2. 预约</h3><p>没什么好多的，美国凡事都得预约。又得用一下蹩脚的英语</p><h3 id="3-检查牙"><a href="#3-检查牙" class="headerlink" title="3. 检查牙"></a>3. 检查牙</h3><p>一个医生用一个含着很不舒服的东西（有棱角，有些角度还是有点疼的），不停的换位置，让我夹着，给牙照相。拍完，来个一个看上去专业点的医生指着牙的部位对我说，左侧最里面智齿蛀掉一半，补牙成本太高，建议我拔，右边也是，虽然轻点，但是也要拔。为了上下平衡，把上面两颗对应的也要拔掉，于是就要拔掉4颗牙。为了安慰我，他说他和那个检查的医生都把那些牙拔了。WTF好吧，按照美国办事的尿性，肯定不会当天拔牙，于是医生给了我另一个人的信息，说是专门做牙科手术的，让我去预约时间。</p><p>当然，他们还顺便推荐我当天洗牙</p><h3 id="4-洗牙"><a href="#4-洗牙" class="headerlink" title="4.洗牙"></a>4.洗牙</h3><p>妈蛋，我以为就是简单洗洗，居然疼死我了。他们用不知道什么样的设备在我牙上刮来刮去（医生说全程闭眼会舒服点），几乎刮破了所有能刮破的牙龈（牙齿和肉衔接的地方）。漱口的时候全是血。因为洗牙需要用水，他们就在我口腔放了一个吸气的管子，问题是很多时候它吸到我肉上了，唉，肉疼。洗完之后，所有的医生都问我“舒服吗？”，舒服你妹啊，疼死老子了。</p><p>于是悲剧的一天几乎就在满嘴血腥味中要结束了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;牙疼疼了快一年了，最近终于不想忍了，就预约了牙医—-整个经历就是一个大写的&lt;strong&gt;疼&lt;/strong&gt;。
希望我的经历能对北美想看牙医的人有点帮助。&lt;/p&gt;
    
    </summary>
    
      <category term="程序员的日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/"/>
    
      <category term="日常" scheme="https://hzhou.me/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%97%A5%E5%B8%B8/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="就医" scheme="https://hzhou.me/tags/%E5%B0%B1%E5%8C%BB/"/>
    
  </entry>
  
</feed>
